@model Dram_Capstone.Models.Whiskey
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Details";
}

<div>
    <h4>Whiskey Details</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Distillery)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Distillery)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        @if (Model.Review_Id != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Review.DateCreated)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Review.DateCreated)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Review.ReviewScore)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Review.ReviewScore)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Review.TastingNotes)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Review.TastingNotes)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Favorite)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Favorite)
            </dd>
            <div class="col-sm-2">
                <div class="card text-center">
                    <div class="card-header">
                        Flavor Profile
                    </div>
                    <div class="card-body">
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Review.FragrantFlavor.Name)
                        </dd>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Review.FruityFlavor.Name)
                        </dd>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Review.GrainyFlavor.Name)
                        </dd>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Review.GrassyFlavor.Name)
                        </dd>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Review.OffNoteFlavor.Name)
                        </dd>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Review.PeatyFlavor.Name)
                        </dd>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Review.WineyFlavor.Name)
                        </dd>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Review.WoodyFlavor.Name)
                        </dd>
                    </div>
                </div>
            </div>
        }
        else
        {
            <dt class="col-sm-12">
                <a asp-controller="Reviews" asp-route-id="@Model.WhiskeyId" asp-action="Create">Add Your Review!</a>
            </dt>
        }

    </dl>
</div>
<div>
    @*need to add conditional rendering, if the user not logged in is reviewing the details,
        they can not add a review or edit the post *@
    @{ var user = await UserManager.GetUserAsync(User);}

    @if (user.Id == Model.UserId)
    {
        <a asp-action="Edit" asp-route-id="@Model.WhiskeyId">Edit Whiskey</a><a> | </a>
        <a asp-action="Index">Back to List</a>
    }
    else
    {
        <a asp-action="Index">Back to List</a>
    }
</div>
